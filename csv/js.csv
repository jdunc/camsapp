str.length, Return length of string str
str[n], Return nth character of string str
str.charAt(index), Return character in string str at specified index
str.toLowerCase(), Convert string str to lower case
str.toUpperCase(), Convert string str to upper case
str.indexOf(substr), Return first index within string str of substring substr
str.split(separator), Split string str into an array of substrings separated by param separator
str.trim(), Trim whitespace from beginning and end of string str
str1 < str2, Return true if str1 is less than str2
str1 > str2, return true if str1 is greater than str2
str.codePointAt(index), Return non-negative int from string str that is the UTF-16 encoded code point at given index
str1.includes(str2), Return true if str2 is found in string str1
str1.endsWith(str2), Return true if string str1 ends with string str2
str.normalize(), Return Unicode Normalization Form of string str
str.repeat(int), Return string repeated int times of string str
str1.startsWith(str2), Return true if string str1 starts with str2
str[@@iterator](), Return a new Iterator that iterates over the code points of string str, returning each code point as String value
str.charCodeAt(index), Return number indicating Unicode value of char at given index of string str
str1.concat(str2), Combine text of strings str1 and str2 and return a new string
str.lastIndexOf(substr), Return last index within string str of substring substr
str.slice(start, end), Extract a section of string str from start to end
str.substr(start, length), Return characters in string str from start having length length
str.substring(index1, index2), Return subset of string str between index1 and index2
str.toLocaleLowerCase(), Convert chars in string str to lower case while respecting current locale
str.toLocaleUpperCase(), Convert chars in string str to upper case while respecting current locale
str.trimLeft(), Trim whitespace from left side of string st
str.trimRight(), Trim whitespace form right side of string str
str1.localeCompare(str2), Return -1(comma)0(comma)or 1 indicating if string str1 is less than, equal to, or greater than str2
str.match(regexp), Match a regular expression regexp against string str
str1.replace(regexp, str2), Replace matched regexp elements in string str1 with string str2
str.search(regexp), Return position of search for a match between regexp and string str
a1.concat(a2), Return new array by joining arrays a1 and a2 together
a1.join(separator), Join all elements of array a1 into a string separated by separator arg
a1.slice(start, end), Extract a section from start to end of array a1 and return a new array
a1.indexOf(obj), Return first index of obj within array a1
a1.lastIndexOf(obj), Return last index of obj within array a1
a1.forEach(fn), Calls function fn for each element in the array a1
a1.every(fn), Return true if every element in array a1 satisfies provided testing function fn
a1.some(fn), Return true if at least one element in array a1 satisfies provided testing function fn
a1.filter(fn), Create a new array with all elements of array a1 which pass the filtering function fn
a1.map(fn), Create a new array with results of calling function fn on every element in array a1
a1.reduce(fn), Apply a function fn against an accumulator and each value (from left to right) of the array as to reduce it to a single value
a1.reduceRight(fn), Apply a function fn against an accumulator and each value (from right to left) of the array as to reduce it to a single value
a1.pop(), Remove and return last element from array a1
a1.push(obj), Add obj to end of array a1 and return new length
a1.reverse(), Reverse order of elements of array a1 in place
a1.sort(), Sort the elements of array a1 in place
a1.splice(start(comma) deleteCount (comma) items), Change content of array a1 by removing existing elements and/or adding new elements
a1.unshift(obj), Add obj to start of array a1 and return new length
a1.toString(), Return a string representing array a1 and its elements (same as a1. join('(comma)'))
a1.toLocaleString(), Return a localized string representing array a1 and its elements (similar to a1.join('(comma)'))
Array.isArray(var), Return true if var is an array
a1.length, Return length of array a1
a1[0], Access first element of array a1
